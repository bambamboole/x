name: Release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag of the new release"
        required: true

jobs:
  build:
    strategy:
      matrix:
        goos: [linux, darwin]
        arch: [amd64, arm64]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: './go.mod'
      - name: Download & verify dependencies
        run: go mod download && go mod verify
      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.arch }}
        run: go build -o x-${{ inputs.tag }}-${{ matrix.goos }}-${{ matrix.arch }} cmd/main/main.go
      - uses: actions/upload-artifact@v3
        with:
          name: binaries
          path: ./x-${{ inputs.tag }}-${{ matrix.goos }}-${{ matrix.arch }}
          if-no-files-found: error
  release:
    needs: build
    runs-on: ubuntu-latest
    outputs:
      x_binaries: ${{ steps.files.outputs.x_binaries }}
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: binaries
      - name: Build binary list
        id: files
        run: |
          delimiter="$(openssl rand -hex 8)"
          echo "x-binaries<<${delimiter}" >> "${GITHUB_OUTPUT}"
          echo $(ls -R | grep x-) >> "${GITHUB_OUTPUT}"
          echo "${delimiter}" >> "${GITHUB_OUTPUT}"
      - name: debug
        run: echo ${{ steps.files.outputs.x_binaries }}
#      - name: build release
#        uses: softprops/action-gh-release@v1
#        with:
#          generate_release_notes: true
#          tag_name: ${{ inputs.tags }}
description:
runs:#          with:
#            files: ${{ steps.files.outputs.x_binaries }}